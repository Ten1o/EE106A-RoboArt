#!/usr/bin/python
import numpy as np
from positionControl import *
import rospy
from arDetect import *
from pathPlanner import *
class draw(object):
    #inputFig = np.array()
    #size = 255 or 1000
    def __init__(self, coord, inputFig, size, h_offset=0.25):
        self.coord = coord
        self.originalFig = inputFig
        self.scalar = min(abs(coord.coord1.transform.translation.x-coord.coord2.transform.translation.x),\
            abs(coord.coord1.transform.translation.y-coord.coord2.transform.translation.y))
        self.h = -min(coord.coord1.transform.translation.z,coord.coord2.transform.translation.z)
        self.h_offset = h_offset
        self.size = size
        self.fig = inputFig
        for i in range(len(inputFig)):
            for j in range(len(inputFig[i])):
                self.fig[i][j][0] = inputFig[i][j][0]/size*self.scalar + coord.origin[0]
                self.fig[i][j][1] = inputFig[i][j][1]/size*self.scalar + coord.origin[1]
                # self.fig[i][j][0] = inputFig[i][j][0]
                # self.fig[i][j][1] = inputFig[i][j][1]

        # self.draw()

    def liftArm(self,currentPos):
         #position for right_hand_camera
        r=rospy.Rate(2)
        r.sleep()
        controller = velocityControl( Limb("right"))
        [start_x,start_y,start_h] = currentPos
        joints_position = coorConvert.cartesian2joint(start_x,start_y,start_h-0.05,mode=1)
        positionControl.positionControl(jointCom=joints_position)
        controller = velocityControl( Limb("right"))
        r.sleep()


        # try:

        #     [start_x,start_y,start_h] = currentPos
        #     goalPos = [start_x,start_y,start_h-0.05]
        #     # print (goalPos)
        #     points = arDetect.generateLineV(currentPos, goalPos)
        #     my_path = vpath(points,0.01)
        #     plan = my_path.path_msg()
        #     if my_path.valid:
        #         flag=controller.execute_path(plan)
        #         pass
        #     else:
        #         flag=0

        #     if not flag:
        #         raise Exception("Execution failed")
        # except Exception as e:
        #     print e

        

    def transferNextPos(self,nextPos):
        r=rospy.Rate(0.5)
        [start_x,start_y,start_h] = nextPos
        joints_position = coorConvert.cartesian2joint(start_x,start_y,start_h-0.05,mode=1)
        positionControl.positionControl(jointCom=joints_position)
        controller = velocityControl( Limb("right"))
        # r.sleep()

        try:
            currentPos = [start_x,start_y,start_h-0.05]
            goalPos = [start_x,start_y,start_h]
            points = arDetect.generateLineV(currentPos, goalPos)
            my_path = vpath(points,0.01)
            plan = my_path.path_msg()       
            if my_path.valid:
                flag=controller.execute_path(plan)
                pass
            else:
                flag=0

            if not flag:
                raise Exception("Execution failed")
        except Exception as e:
            print e

    def draw(self):
        controller = velocityControl( Limb("right"))
        r=rospy.Rate(1)
        for i in range(len(self.fig)):
            nextPos = [self.fig[i][0][0], self.fig[i][0][1], self.h + self.h_offset] 
            self.transferNextPos(nextPos)

            # while not rospy.is_shutdown():
            for j in range(len(self.fig[i])-1):
                try:
                    print('start '+str(j)+' round.')
                    pointA = [self.fig[i][j][0], self.fig[i][j][1]]
                    pointB = [self.fig[i][j+1][0], self.fig[i][j+1][1]]
                    # print('___________________________________')
                    # print(pointA)
                    # print('___________________________________')
                    # print(pointB)   
                    # print('___________________________________')    
                    points = arDetect.generateLine(pointA,pointB)
                    print('111111')
                    my_path = path(points,0.005,self.h+self.h_offset)
                    print('2222222')
                    plan = my_path.path_msg()   
                    print('3333333')    
                    if my_path.valid:
                        flag=controller.execute_path(plan)
                        print('444444')
                        print('finish '+str(j)+' round.')
                        pass
                    else:
                        flag=0

                    if not flag:
                        raise Exception("Execution failed")
                except Exception as e:
                    print e
                    # exit()

            r.sleep()
            currentPos = [self.fig[i][-1][0], self.fig[i][-1][1], self.h+self.h_offset]
            # print (currentPos)
            self.liftArm(currentPos)
 


            # [start_x,start_y,h] = [0.72, 0.01, -0.00288962+0.35]
            # joints_position = coorConvert.cartesian2joint(start_x,start_y,h)
            # positionControl.positionControl(jointCom=joints_position)

    def graspPen(self, coor):
        r = rospy.Rate(1)
        positionControl.positionControl(gripperCom='calibrate')
        r.sleep()
        positionControl.positionControl(gripperCom='open')
        r.sleep()

        penFrame = [coor.coordPen.transform.translation.x, coor.coordPen.transform.translation.y, coor.coordPen.transform.translation.z)

        penFrame[0] = penFrame[0] - 0.14
        penFrame[2] = penFrame[2] + self.h_offset - 0.3

        [start_x,start_y,start_h] = penFrame
        joints_position = coorConvert.cartesian2joint(start_x,start_y,start_h,mode=1)
        positionControl.positionControl(jointCom=joints_position)
        controller = velocityControl( Limb("right"))
        # r.sleep()

        try:
            currentPos = [start_x,start_y,start_h]
            goalPos = [start_x,start_y,start_h+0.1]
            points = arDetect.generateLineV(currentPos, goalPos)
            my_path = vpath(points,0.01)
            plan = my_path.path_msg()       
            if my_path.valid:
                flag=controller.execute_path(plan)
                positionControl.positionControl(gripperCom='close')
                pass
            else:
                flag=0

            if not flag:
                raise Exception("Execution failed")
        except Exception as e:
            print e




def test():
    rospy.init_node('testController', anonymous=True)
    coor = coordinate('ar_marker_4','ar_marker_5')
    #inputFig = [[[39.0,144.0],[51.0,146.0],[49.0,170.0],[52.0,183.0],[81.0,220.0],[77.0,219.0],[51.0,181.0],[51.0,146.0],[38.0,144.0],[34.0,164.0],[39.0,144.0],[35.0,136.0],[29.0,143.0],[28.0,152.0],[30.0,170.0],[38.0,189.0],[30.0,170.0],[30.0,141.0],[26.0,140.0],[23.0,153.0],[27.0,180.0],[36.0,194.0],[49.0,202.0],[49.0,213.0],[61.0,218.0],[47.0,211.0],[43.0,216.0],[52.0,228.0],[70.0,237.0],[69.0,241.0],[65.0,240.0],[84.0,247.0],[90.0,256.0],[87.0,249.0],[71.0,243.0],[69.0,237.0],[52.0,228.0],[43.0,216.0],[45.0,210.0],[32.0,197.0],[39.0,207.0],[47.0,212.0],[50.0,209.0],[50.0,203.0],[37.0,195.0],[28.0,183.0],[21.0,151.0],[24.0,152.0],[34.0,123.0],[27.0,139.0],[31.0,141.0],[39.0,128.0],[35.0,108.0],[31.0,108.0],[13.0,75.0],[31.0,108.0],[35.0,108.0],[37.0,86.0],[15.0,70.0],[8.0,73.0],[20.0,98.0],[18.0,103.0],[30.0,118.0],[22.0,139.0],[14.0,142.0],[14.0,154.0],[0.0,147.0],[5.0,152.0],[15.0,153.0],[9.0,130.0],[13.0,112.0],[9.0,128.0],[13.0,142.0],[17.0,141.0],[17.0,135.0],[17.0,141.0],[23.0,137.0],[23.0,131.0],[15.0,132.0],[13.0,123.0],[15.0,132.0],[26.0,128.0],[20.0,112.0],[26.0,125.0],[30.0,118.0],[28.0,112.0],[12.0,99.0],[12.0,96.0],[16.0,102.0],[21.0,99.0],[13.0,89.0],[8.0,73.0],[10.0,69.0],[2.0,54.0],[10.0,70.0],[17.0,71.0],[37.0,86.0],[41.0,74.0],[47.0,74.0],[62.0,48.0],[75.0,38.0],[85.0,36.0],[85.0,39.0],[95.0,40.0],[115.0,51.0],[112.0,59.0],[99.0,56.0],[80.0,65.0],[73.0,75.0],[76.0,85.0],[68.0,90.0],[69.0,94.0],[79.0,91.0],[69.0,94.0],[68.0,90.0],[88.0,77.0],[117.0,65.0],[124.0,66.0],[125.0,70.0],[105.0,81.0],[107.0,91.0],[115.0,95.0],[115.0,99.0],[121.0,99.0],[123.0,92.0],[128.0,93.0],[129.0,97.0],[128.0,93.0],[119.0,90.0],[123.0,91.0],[122.0,98.0],[114.0,99.0],[112.0,103.0],[123.0,104.0],[109.0,103.0],[98.0,107.0],[97.0,103.0],[102.0,100.0],[98.0,103.0],[100.0,108.0],[112.0,103.0],[115.0,94.0],[119.0,93.0],[109.0,93.0],[105.0,81.0],[99.0,82.0],[95.0,88.0],[88.0,88.0],[95.0,88.0],[111.0,75.0],[104.0,75.0],[80.0,90.0],[104.0,75.0],[112.0,76.0],[125.0,70.0],[124.0,66.0],[103.0,70.0],[78.0,84.0],[73.0,75.0],[87.0,60.0],[99.0,56.0],[112.0,58.0],[118.0,51.0],[142.0,66.0],[181.0,103.0],[191.0,123.0],[191.0,140.0],[196.0,143.0],[190.0,150.0],[174.0,158.0],[154.0,159.0],[134.0,144.0],[124.0,147.0],[123.0,173.0],[99.0,190.0],[82.0,193.0],[71.0,185.0],[76.0,183.0],[89.0,188.0],[110.0,175.0],[106.0,172.0],[104.0,176.0],[92.0,179.0],[75.0,177.0],[72.0,172.0],[78.0,167.0],[79.0,160.0],[83.0,164.0],[87.0,161.0],[82.0,167.0],[89.0,166.0],[99.0,156.0],[105.0,159.0],[109.0,153.0],[111.0,160.0],[97.0,171.0],[81.0,172.0],[97.0,171.0],[112.0,158.0],[110.0,151.0],[105.0,159.0],[101.0,156.0],[106.0,154.0],[97.0,154.0],[99.0,156.0],[85.0,166.0],[81.0,159.0],[87.0,155.0],[73.0,170.0],[75.0,177.0],[92.0,179.0],[106.0,172.0],[110.0,174.0],[120.0,166.0],[95.0,186.0],[83.0,188.0],[76.0,182.0],[73.0,189.0],[82.0,193.0],[94.0,192.0],[123.0,173.0],[126.0,158.0],[121.0,144.0],[123.0,147.0],[133.0,144.0],[127.0,124.0],[133.0,144.0],[154.0,159.0],[183.0,155.0],[195.0,144.0],[200.0,147.0],[206.0,186.0],[199.0,207.0],[205.0,196.0],[205.0,163.0],[210.0,163.0],[212.0,185.0],[209.0,156.0],[196.0,123.0],[196.0,112.0],[169.0,75.0],[169.0,70.0],[181.0,66.0],[191.0,79.0],[202.0,84.0],[210.0,100.0],[209.0,104.0],[202.0,84.0],[191.0,79.0],[151.0,36.0],[111.0,14.0],[102.0,16.0],[127.0,31.0],[147.0,50.0],[127.0,31.0],[103.0,19.0],[104.0,12.0],[93.0,1.0],[104.0,13.0],[151.0,36.0],[180.0,65.0],[178.0,69.0],[168.0,70.0],[155.0,54.0],[196.0,112.0],[196.0,123.0],[209.0,162.0],[204.0,162.0],[200.0,147.0],[191.0,140.0],[182.0,149.0],[152.0,153.0],[165.0,151.0],[165.0,148.0],[172.0,151.0],[173.0,147.0],[169.0,147.0],[183.0,137.0],[184.0,132.0],[179.0,141.0],[175.0,135.0],[158.0,141.0],[144.0,139.0],[144.0,134.0],[163.0,136.0],[167.0,131.0],[163.0,136.0],[155.0,136.0],[155.0,130.0],[165.0,127.0],[169.0,130.0],[172.0,125.0],[169.0,130.0],[166.0,127.0],[155.0,130.0],[155.0,136.0],[144.0,134.0],[143.0,137.0],[158.0,141.0],[175.0,135.0],[185.0,127.0],[185.0,122.0],[170.0,119.0],[167.0,121.0],[170.0,125.0],[167.0,122.0],[160.0,125.0],[170.0,119.0],[183.0,120.0],[186.0,125.0],[175.0,134.0],[178.0,142.0],[173.0,150.0],[182.0,149.0],[190.0,142.0],[192.0,137.0],[188.0,128.0],[191.0,123.0],[186.0,111.0],[142.0,66.0],[106.0,46.0],[111.0,42.0],[153.0,68.0],[108.0,40.0],[105.0,46.0],[85.0,39.0],[87.0,33.0],[93.0,35.0],[71.0,26.0],[56.0,12.0],[42.0,15.0],[33.0,11.0],[33.0,1.0],[33.0,11.0],[53.0,14.0],[46.0,1.0],[64.0,21.0],[87.0,32.0],[65.0,45.0],[47.0,74.0],[41.0,74.0],[37.0,40.0],[43.0,23.0],[46.0,23.0],[19.0,19.0],[11.0,23.0],[10.0,30.0],[0.0,23.0],[8.0,29.0],[17.0,29.0],[20.0,35.0],[16.0,48.0],[11.0,46.0],[5.0,50.0],[0.0,49.0],[19.0,44.0],[18.0,40.0],[14.0,43.0],[10.0,36.0],[2.0,44.0],[2.0,40.0],[5.0,43.0],[7.0,39.0],[5.0,33.0],[10.0,34.0],[13.0,42.0],[20.0,38.0],[20.0,33.0],[11.0,28.0],[6.0,14.0],[0.0,13.0],[0.0,3.0],[6.0,18.0],[15.0,23.0]]]
    #inputFig = [[[0.54, 0.30],[0.48, 0.08],[0.72, 0.01]]]
    # inputFig =  [[[373.0, 205.0], [665.0, 172.0], [668.0, 686.0]]]
    # inputFig = [[[358.0, 194.0], [365.0, 710.0]], [[373.0, 205.0], [665.0, 172.0], [668.0, 686.0]]]
    #inputFig = [[[358.0, 194.0], [365.0, 710.0]], [[373.0, 205.0], [665.0, 172.0], [668.0, 686.0]], [[383.0, 362.0], [553.0, 344.0]], [[385.0, 519.0], [583.0, 495.0]], [[110.0, 732.0], [915.0, 704.0]]]
    
    # drawIns = draw(coor, inputFig, 1000.0, h_offset=0.143)

    #qie
    # inputFig =[[[806.0, 642.0], [290.0, 635.0]], [[795.0, 627.0], [828.0, 335.0], [314.0, 332.0]], [[638.0, 617.0], [656.0, 447.0]], [[481.0, 615.0], [505.0, 417.0]], [[268.0, 890.0], [296.0, 85.0]]]

    #zhang
    # inputFig =[[[610.0, 770.0], [688.0, 270.0]], [[867.0, 480.0], [486.0, 522.0], [264.0, 695.0], [216.0, 840.0]], [[525.0, 720.0], [327.0, 475.0], [174.0, 267.0], [183.0, 60.0]]]

    #si
    # inputFig = [[[810.0, 660.0], [569.0, 815.0], [573.0, 652.0]], [[706.0, 537.0], [399.0, 755.0], [438.0, 590.0]], [[843.0, 340.0], [560.0, 492.0], [564.0, 350.0]], [[686.0, 230.0], [425.0, 465.0], [453.0, 232.0]], [[264.0, 832.0], [298.0, 162.0]]]
    
    #potrait
    # inputFig = [[[39.0,144.0],[51.0,146.0],[49.0,170.0],[52.0,183.0],[81.0,220.0],[77.0,219.0],[51.0,181.0],[51.0,146.0],[38.0,144.0],[34.0,164.0],[39.0,144.0],[35.0,136.0],[29.0,143.0],[28.0,152.0],[30.0,170.0],[38.0,189.0],[30.0,170.0],[30.0,141.0],[26.0,140.0],[23.0,153.0],[27.0,180.0],[36.0,194.0],[49.0,202.0],[49.0,213.0],[61.0,218.0],[47.0,211.0],[43.0,216.0],[52.0,228.0],[70.0,237.0],[69.0,241.0],[65.0,240.0],[84.0,247.0],[90.0,256.0],[87.0,249.0],[71.0,243.0],[69.0,237.0],[52.0,228.0],[43.0,216.0],[45.0,210.0],[32.0,197.0],[39.0,207.0],[47.0,212.0],[50.0,209.0],[50.0,203.0],[37.0,195.0],[28.0,183.0],[21.0,151.0],[24.0,152.0],[34.0,123.0],[27.0,139.0],[31.0,141.0],[39.0,128.0],[35.0,108.0],[31.0,108.0],[13.0,75.0],[31.0,108.0],[35.0,108.0],[37.0,86.0],[15.0,70.0],[8.0,73.0],[20.0,98.0],[18.0,103.0],[30.0,118.0],[22.0,139.0],[14.0,142.0],[14.0,154.0],[0.0,147.0],[5.0,152.0],[15.0,153.0],[9.0,130.0],[13.0,112.0],[9.0,128.0],[13.0,142.0],[17.0,141.0],[17.0,135.0],[17.0,141.0],[23.0,137.0],[23.0,131.0],[15.0,132.0],[13.0,123.0],[15.0,132.0],[26.0,128.0],[20.0,112.0],[26.0,125.0],[30.0,118.0],[28.0,112.0],[12.0,99.0],[12.0,96.0],[16.0,102.0],[21.0,99.0],[13.0,89.0],[8.0,73.0],[10.0,69.0],[2.0,54.0],[10.0,70.0],[17.0,71.0],[37.0,86.0],[41.0,74.0],[47.0,74.0],[62.0,48.0],[75.0,38.0],[85.0,36.0],[85.0,39.0],[95.0,40.0],[115.0,51.0],[112.0,59.0],[99.0,56.0],[80.0,65.0],[73.0,75.0],[76.0,85.0],[68.0,90.0],[69.0,94.0],[79.0,91.0],[69.0,94.0],[68.0,90.0],[88.0,77.0],[117.0,65.0],[124.0,66.0],[125.0,70.0],[105.0,81.0],[107.0,91.0],[115.0,95.0],[115.0,99.0],[121.0,99.0],[123.0,92.0],[128.0,93.0],[129.0,97.0],[128.0,93.0],[119.0,90.0],[123.0,91.0],[122.0,98.0],[114.0,99.0],[112.0,103.0],[123.0,104.0],[109.0,103.0],[98.0,107.0],[97.0,103.0],[102.0,100.0],[98.0,103.0],[100.0,108.0],[112.0,103.0],[115.0,94.0],[119.0,93.0],[109.0,93.0],[105.0,81.0],[99.0,82.0],[95.0,88.0],[88.0,88.0],[95.0,88.0],[111.0,75.0],[104.0,75.0],[80.0,90.0],[104.0,75.0],[112.0,76.0],[125.0,70.0],[124.0,66.0],[103.0,70.0],[78.0,84.0],[73.0,75.0],[87.0,60.0],[99.0,56.0],[112.0,58.0],[118.0,51.0],[142.0,66.0],[181.0,103.0],[191.0,123.0],[191.0,140.0],[196.0,143.0],[190.0,150.0],[174.0,158.0],[154.0,159.0],[134.0,144.0],[124.0,147.0],[123.0,173.0],[99.0,190.0],[82.0,193.0],[71.0,185.0],[76.0,183.0],[89.0,188.0],[110.0,175.0],[106.0,172.0],[104.0,176.0],[92.0,179.0],[75.0,177.0],[72.0,172.0],[78.0,167.0],[79.0,160.0],[83.0,164.0],[87.0,161.0],[82.0,167.0],[89.0,166.0],[99.0,156.0],[105.0,159.0],[109.0,153.0],[111.0,160.0],[97.0,171.0],[81.0,172.0],[97.0,171.0],[112.0,158.0],[110.0,151.0],[105.0,159.0],[101.0,156.0],[106.0,154.0],[97.0,154.0],[99.0,156.0],[85.0,166.0],[81.0,159.0],[87.0,155.0],[73.0,170.0],[75.0,177.0],[92.0,179.0],[106.0,172.0],[110.0,174.0],[120.0,166.0],[95.0,186.0],[83.0,188.0],[76.0,182.0],[73.0,189.0],[82.0,193.0],[94.0,192.0],[123.0,173.0],[126.0,158.0],[121.0,144.0],[123.0,147.0],[133.0,144.0],[127.0,124.0],[133.0,144.0],[154.0,159.0],[183.0,155.0],[195.0,144.0],[200.0,147.0],[206.0,186.0],[199.0,207.0],[205.0,196.0],[205.0,163.0],[210.0,163.0],[212.0,185.0],[209.0,156.0],[196.0,123.0],[196.0,112.0],[169.0,75.0],[169.0,70.0],[181.0,66.0],[191.0,79.0],[202.0,84.0],[210.0,100.0],[209.0,104.0],[202.0,84.0],[191.0,79.0],[151.0,36.0],[111.0,14.0],[102.0,16.0],[127.0,31.0],[147.0,50.0],[127.0,31.0],[103.0,19.0],[104.0,12.0],[93.0,1.0],[104.0,13.0],[151.0,36.0],[180.0,65.0],[178.0,69.0],[168.0,70.0],[155.0,54.0],[196.0,112.0],[196.0,123.0],[209.0,162.0],[204.0,162.0],[200.0,147.0],[191.0,140.0],[182.0,149.0],[152.0,153.0],[165.0,151.0],[165.0,148.0],[172.0,151.0],[173.0,147.0],[169.0,147.0],[183.0,137.0],[184.0,132.0],[179.0,141.0],[175.0,135.0],[158.0,141.0],[144.0,139.0],[144.0,134.0],[163.0,136.0],[167.0,131.0],[163.0,136.0],[155.0,136.0],[155.0,130.0],[165.0,127.0],[169.0,130.0],[172.0,125.0],[169.0,130.0],[166.0,127.0],[155.0,130.0],[155.0,136.0],[144.0,134.0],[143.0,137.0],[158.0,141.0],[175.0,135.0],[185.0,127.0],[185.0,122.0],[170.0,119.0],[167.0,121.0],[170.0,125.0],[167.0,122.0],[160.0,125.0],[170.0,119.0],[183.0,120.0],[186.0,125.0],[175.0,134.0],[178.0,142.0],[173.0,150.0],[182.0,149.0],[190.0,142.0],[192.0,137.0],[188.0,128.0],[191.0,123.0],[186.0,111.0],[142.0,66.0],[106.0,46.0],[111.0,42.0],[153.0,68.0],[108.0,40.0],[105.0,46.0],[85.0,39.0],[87.0,33.0],[93.0,35.0],[71.0,26.0],[56.0,12.0],[42.0,15.0],[33.0,11.0],[33.0,1.0],[33.0,11.0],[53.0,14.0],[46.0,1.0],[64.0,21.0],[87.0,32.0],[65.0,45.0],[47.0,74.0],[41.0,74.0],[37.0,40.0],[43.0,23.0],[46.0,23.0],[19.0,19.0],[11.0,23.0],[10.0,30.0],[0.0,23.0],[8.0,29.0],[17.0,29.0],[20.0,35.0],[16.0,48.0],[11.0,46.0],[5.0,50.0],[0.0,49.0],[19.0,44.0],[18.0,40.0],[14.0,43.0],[10.0,36.0],[2.0,44.0],[2.0,40.0],[5.0,43.0],[7.0,39.0],[5.0,33.0],[10.0,34.0],[13.0,42.0],[20.0,38.0],[20.0,33.0],[11.0,28.0],[6.0,14.0],[0.0,13.0],[0.0,3.0],[6.0,18.0],[15.0,23.0]]]
    
    #shankar
    inputFig = [[[80.0,39.0],[64.0,60.0],[50.0,62.0],[51.0,58.0],[48.0,58.0],[53.0,54.0],[49.0,61.0],[36.0,67.0],[30.0,55.0],[26.0,59.0],[60.0,40.0],[49.0,44.0],[41.0,53.0],[36.0,51.0],[30.0,55.0],[36.0,67.0],[45.0,60.0],[48.0,65.0],[40.0,68.0],[45.0,68.0],[46.0,64.0],[51.0,67.0],[50.0,71.0],[39.0,71.0],[50.0,71.0],[51.0,77.0],[43.0,77.0],[37.0,82.0],[39.0,84.0],[42.0,80.0],[44.0,88.0],[51.0,87.0],[45.0,91.0],[46.0,94.0],[49.0,92.0],[45.0,96.0],[47.0,107.0],[42.0,114.0],[38.0,114.0],[39.0,111.0],[44.0,103.0],[40.0,112.0],[43.0,116.0],[36.0,124.0],[38.0,129.0],[31.0,142.0],[32.0,138.0],[28.0,136.0],[32.0,127.0],[26.0,125.0],[27.0,128.0],[18.0,131.0],[17.0,136.0],[18.0,133.0],[21.0,135.0],[17.0,142.0],[21.0,144.0],[14.0,142.0],[14.0,138.0],[17.0,138.0],[11.0,145.0],[17.0,142.0],[22.0,131.0],[21.0,123.0],[26.0,121.0],[25.0,118.0],[14.0,124.0],[18.0,123.0],[17.0,118.0],[11.0,121.0],[15.0,118.0],[20.0,121.0],[21.0,113.0],[27.0,113.0],[30.0,119.0],[36.0,114.0],[31.0,118.0],[27.0,116.0],[39.0,106.0],[36.0,104.0],[41.0,104.0],[30.0,115.0],[21.0,113.0],[23.0,121.0],[19.0,129.0],[15.0,130.0],[17.0,127.0],[14.0,126.0],[13.0,134.0],[7.0,136.0],[9.0,115.0],[20.0,100.0],[16.0,98.0],[24.0,99.0],[28.0,106.0],[24.0,99.0],[35.0,94.0],[17.0,88.0],[19.0,78.0],[23.0,77.0],[22.0,67.0],[23.0,77.0],[12.0,84.0],[11.0,91.0],[14.0,92.0],[11.0,91.0],[12.0,84.0],[19.0,79.0],[18.0,89.0],[29.0,94.0],[35.0,88.0],[41.0,96.0],[35.0,97.0],[42.0,100.0],[33.0,88.0],[35.0,94.0],[20.0,99.0],[9.0,115.0],[6.0,112.0],[13.0,106.0],[6.0,115.0],[9.0,115.0],[8.0,127.0],[12.0,126.0],[8.0,127.0],[8.0,140.0],[6.0,138.0],[9.0,140.0],[9.0,135.0],[13.0,135.0],[14.0,126.0],[19.0,129.0],[21.0,124.0],[27.0,128.0],[28.0,122.0],[34.0,123.0],[29.0,122.0],[32.0,130.0],[28.0,137.0],[22.0,137.0],[22.0,142.0],[27.0,134.0],[24.0,130.0],[29.0,145.0],[24.0,144.0],[23.0,149.0],[26.0,147.0],[24.0,140.0],[24.0,144.0],[31.0,146.0],[34.0,143.0],[33.0,146.0],[29.0,144.0],[29.0,138.0],[34.0,137.0],[37.0,129.0],[41.0,131.0],[33.0,149.0],[37.0,154.0],[39.0,150.0],[42.0,152.0],[43.0,158.0],[44.0,152.0],[35.0,152.0],[33.0,169.0],[29.0,168.0],[23.0,173.0],[23.0,178.0],[19.0,178.0],[14.0,162.0],[21.0,175.0],[19.0,178.0],[23.0,178.0],[29.0,164.0],[31.0,166.0],[26.0,170.0],[33.0,169.0],[31.0,174.0],[34.0,162.0],[44.0,167.0],[38.0,158.0],[40.0,154.0],[38.0,158.0],[42.0,161.0],[48.0,157.0],[46.0,166.0],[50.0,166.0],[46.0,158.0],[42.0,161.0],[42.0,191.0],[36.0,198.0],[40.0,203.0],[36.0,195.0],[41.0,196.0],[49.0,205.0],[50.0,200.0],[49.0,204.0],[45.0,200.0],[48.0,194.0],[60.0,206.0],[48.0,194.0],[41.0,201.0],[40.0,191.0],[45.0,193.0],[41.0,178.0],[37.0,178.0],[40.0,175.0],[41.0,181.0],[46.0,182.0],[45.0,190.0],[55.0,181.0],[50.0,189.0],[46.0,181.0],[51.0,177.0],[52.0,183.0],[51.0,177.0],[44.0,182.0],[44.0,171.0],[47.0,174.0],[52.0,168.0],[51.0,175.0],[54.0,169.0],[67.0,167.0],[58.0,159.0],[53.0,166.0],[54.0,155.0],[47.0,153.0],[51.0,149.0],[49.0,139.0],[53.0,137.0],[44.0,135.0],[43.0,143.0],[38.0,138.0],[46.0,142.0],[45.0,136.0],[55.0,135.0],[54.0,127.0],[59.0,134.0],[62.0,133.0],[62.0,125.0],[61.0,136.0],[54.0,124.0],[61.0,119.0],[68.0,131.0],[65.0,121.0],[62.0,123.0],[62.0,117.0],[70.0,119.0],[65.0,112.0],[76.0,117.0],[71.0,121.0],[78.0,131.0],[73.0,123.0],[73.0,118.0],[76.0,118.0],[86.0,125.0],[84.0,132.0],[87.0,132.0],[81.0,121.0],[89.0,111.0],[79.0,117.0],[82.0,118.0],[80.0,121.0],[71.0,113.0],[57.0,110.0],[54.0,113.0],[58.0,110.0],[66.0,117.0],[62.0,114.0],[65.0,112.0],[70.0,119.0],[56.0,115.0],[56.0,119.0],[59.0,119.0],[56.0,115.0],[61.0,119.0],[54.0,127.0],[51.0,126.0],[53.0,118.0],[49.0,117.0],[47.0,133.0],[48.0,118.0],[43.0,122.0],[46.0,112.0],[49.0,112.0],[46.0,118.0],[52.0,116.0],[51.0,121.0],[54.0,121.0],[49.0,133.0],[51.0,126.0],[55.0,132.0],[50.0,135.0],[48.0,144.0],[51.0,162.0],[50.0,155.0],[56.0,154.0],[57.0,147.0],[53.0,166.0],[59.0,161.0],[61.0,163.0],[59.0,153.0],[59.0,158.0],[59.0,153.0],[66.0,154.0],[59.0,149.0],[63.0,148.0],[61.0,140.0],[52.0,146.0],[55.0,139.0],[52.0,151.0],[59.0,137.0],[63.0,157.0],[68.0,156.0],[68.0,159.0],[70.0,152.0],[69.0,156.0],[61.0,155.0],[67.0,173.0],[74.0,173.0],[75.0,169.0],[77.0,172.0],[82.0,166.0],[86.0,176.0],[83.0,165.0],[79.0,162.0],[78.0,167.0],[83.0,163.0],[81.0,156.0],[77.0,159.0],[75.0,151.0],[64.0,144.0],[69.0,145.0],[65.0,131.0],[70.0,150.0],[80.0,149.0],[76.0,149.0],[74.0,143.0],[78.0,137.0],[81.0,139.0],[74.0,143.0],[75.0,139.0],[70.0,135.0],[74.0,139.0],[72.0,146.0],[73.0,142.0],[78.0,149.0],[72.0,159.0],[79.0,157.0],[78.0,153.0],[82.0,155.0],[84.0,140.0],[88.0,137.0],[81.0,152.0],[83.0,165.0],[77.0,172.0],[67.0,173.0],[67.0,169.0],[76.0,167.0],[72.0,163.0],[74.0,160.0],[73.0,168.0],[60.0,168.0],[61.0,165.0],[53.0,174.0],[55.0,178.0],[58.0,174.0],[56.0,185.0],[60.0,179.0],[58.0,190.0],[61.0,171.0],[64.0,169.0],[60.0,179.0],[64.0,176.0],[71.0,178.0],[64.0,176.0],[66.0,185.0],[63.0,189.0],[67.0,199.0],[58.0,193.0],[64.0,194.0],[64.0,201.0],[72.0,193.0],[69.0,183.0],[70.0,190.0],[77.0,185.0],[74.0,186.0],[80.0,193.0],[78.0,181.0],[76.0,183.0],[74.0,179.0],[79.0,184.0],[79.0,176.0],[73.0,176.0],[83.0,177.0],[83.0,184.0],[83.0,177.0],[79.0,176.0],[81.0,191.0],[81.0,186.0],[73.0,186.0],[74.0,199.0],[68.0,201.0],[69.0,198.0],[73.0,203.0],[64.0,203.0],[71.0,202.0],[71.0,206.0],[60.0,216.0],[68.0,211.0],[63.0,207.0],[71.0,209.0],[77.0,218.0],[82.0,214.0],[77.0,218.0],[70.0,209.0],[72.0,206.0],[77.0,212.0],[71.0,206.0],[77.0,199.0],[84.0,202.0],[81.0,204.0],[85.0,208.0],[83.0,216.0],[88.0,212.0],[83.0,213.0],[85.0,208.0],[80.0,199.0],[73.0,203.0],[73.0,193.0],[65.0,193.0],[65.0,178.0],[63.0,182.0],[63.0,179.0],[57.0,179.0],[57.0,171.0],[52.0,168.0],[46.0,168.0],[49.0,175.0],[48.0,171.0],[42.0,174.0],[42.0,166.0],[36.0,169.0],[37.0,175.0],[32.0,178.0],[39.0,168.0],[37.0,160.0],[34.0,162.0],[33.0,155.0],[28.0,152.0],[34.0,157.0],[34.0,150.0],[28.0,147.0],[21.0,155.0],[21.0,147.0],[22.0,167.0],[28.0,158.0],[20.0,163.0],[23.0,157.0],[21.0,160.0],[19.0,153.0],[16.0,156.0],[16.0,147.0],[11.0,153.0],[12.0,156.0],[19.0,147.0],[17.0,153.0],[24.0,154.0],[28.0,147.0],[36.0,150.0],[41.0,145.0],[44.0,148.0],[43.0,145.0],[36.0,149.0],[39.0,144.0],[35.0,140.0],[40.0,136.0],[37.0,136.0],[41.0,133.0],[40.0,126.0],[44.0,126.0],[42.0,129.0],[45.0,126.0],[40.0,126.0],[39.0,130.0],[35.0,119.0],[32.0,120.0],[39.0,117.0],[39.0,121.0],[39.0,117.0],[35.0,121.0],[38.0,125.0],[40.0,123.0],[43.0,109.0],[49.0,108.0],[49.0,101.0],[49.0,108.0],[46.0,105.0],[48.0,97.0],[53.0,100.0],[55.0,109.0],[53.0,101.0],[56.0,102.0],[50.0,97.0],[45.0,99.0],[46.0,90.0],[53.0,91.0],[58.0,82.0],[65.0,92.0],[60.0,82.0],[67.0,88.0],[71.0,87.0],[68.0,86.0],[67.0,91.0],[71.0,90.0],[67.0,91.0],[64.0,80.0],[55.0,84.0],[53.0,89.0],[50.0,89.0],[52.0,80.0],[48.0,84.0],[48.0,79.0],[52.0,82.0],[46.0,88.0],[37.0,81.0],[51.0,74.0],[57.0,80.0],[76.0,77.0],[60.0,79.0],[59.0,75.0],[68.0,75.0],[61.0,70.0],[74.0,68.0],[65.0,69.0],[67.0,72.0],[103.0,78.0],[102.0,84.0],[86.0,85.0],[84.0,82.0],[86.0,85.0],[79.0,87.0],[83.0,90.0],[74.0,89.0],[79.0,93.0],[73.0,91.0],[65.0,95.0],[82.0,90.0],[88.0,97.0],[80.0,100.0],[80.0,106.0],[74.0,108.0],[80.0,103.0],[68.0,104.0],[70.0,109.0],[64.0,109.0],[62.0,102.0],[70.0,100.0],[61.0,99.0],[55.0,90.0],[61.0,99.0],[76.0,97.0],[64.0,102.0],[64.0,109.0],[66.0,105.0],[68.0,109.0],[72.0,102.0],[72.0,108.0],[76.0,99.0],[79.0,99.0],[74.0,100.0],[76.0,103.0],[80.0,103.0],[83.0,98.0],[94.0,97.0],[82.0,103.0],[94.0,97.0],[80.0,94.0],[88.0,88.0],[83.0,90.0],[85.0,85.0],[111.0,85.0],[112.0,96.0],[128.0,97.0],[123.0,101.0],[132.0,114.0],[130.0,119.0],[128.0,116.0],[127.0,137.0],[119.0,133.0],[124.0,135.0],[120.0,129.0],[124.0,124.0],[123.0,116.0],[114.0,120.0],[116.0,129.0],[108.0,125.0],[108.0,105.0],[108.0,125.0],[112.0,133.0],[107.0,135.0],[111.0,145.0],[109.0,135.0],[113.0,135.0],[117.0,146.0],[116.0,140.0],[112.0,139.0],[111.0,127.0],[115.0,126.0],[115.0,118.0],[118.0,126.0],[120.0,123.0],[119.0,112.0],[119.0,117.0],[127.0,114.0],[121.0,114.0],[126.0,123.0],[124.0,131.0],[124.0,124.0],[120.0,129.0],[125.0,137.0],[128.0,137.0],[130.0,116.0],[133.0,124.0],[135.0,122.0],[133.0,133.0],[141.0,133.0],[143.0,123.0],[145.0,127.0],[142.0,108.0],[133.0,99.0],[143.0,111.0],[146.0,98.0],[144.0,130.0],[161.0,115.0],[165.0,119.0],[168.0,111.0],[171.0,112.0],[170.0,106.0],[176.0,103.0],[194.0,107.0],[192.0,101.0],[197.0,107.0],[200.0,108.0],[200.0,104.0],[200.0,108.0],[216.0,115.0],[195.0,104.0],[170.0,106.0],[170.0,109.0],[177.0,110.0],[171.0,109.0],[180.0,124.0],[176.0,131.0],[181.0,131.0],[186.0,144.0],[186.0,152.0],[184.0,144.0],[183.0,156.0],[177.0,162.0],[187.0,154.0],[178.0,167.0],[178.0,173.0],[201.0,172.0],[202.0,169.0],[209.0,172.0],[219.0,166.0],[216.0,168.0],[218.0,173.0],[193.0,193.0],[159.0,202.0],[183.0,198.0],[218.0,173.0],[248.0,163.0],[254.0,157.0],[251.0,161.0],[255.0,162.0],[231.0,168.0],[243.0,148.0],[252.0,114.0],[226.0,88.0],[252.0,114.0],[255.0,112.0],[248.0,119.0],[207.0,71.0],[191.0,59.0],[177.0,51.0],[163.0,55.0],[157.0,49.0],[166.0,55.0],[202.0,34.0],[220.0,3.0],[206.0,29.0],[232.0,49.0],[236.0,43.0],[254.0,48.0],[240.0,43.0],[236.0,45.0],[255.0,54.0],[237.0,45.0],[234.0,49.0],[242.0,56.0],[238.0,60.0],[243.0,57.0],[252.0,65.0],[245.0,62.0],[250.0,66.0],[245.0,73.0],[238.0,65.0],[209.0,49.0],[208.0,53.0],[240.0,74.0],[202.0,49.0],[207.0,51.0],[209.0,48.0],[205.0,46.0],[213.0,50.0],[245.0,73.0],[251.0,73.0],[254.0,79.0],[255.0,76.0],[247.0,73.0],[252.0,65.0],[206.0,29.0],[177.0,51.0],[207.0,71.0],[236.0,102.0],[253.0,126.0],[255.0,140.0],[251.0,120.0],[239.0,155.0],[231.0,152.0],[233.0,136.0],[229.0,152.0],[223.0,130.0],[215.0,127.0],[221.0,128.0],[223.0,133.0],[226.0,131.0],[228.0,148.0],[238.0,155.0],[225.0,174.0],[243.0,182.0],[247.0,180.0],[239.0,175.0],[255.0,184.0],[247.0,185.0],[255.0,190.0],[247.0,185.0],[255.0,181.0],[243.0,182.0],[218.0,173.0],[216.0,169.0],[178.0,175.0],[178.0,167.0],[190.0,154.0],[187.0,141.0],[190.0,154.0],[187.0,159.0],[183.0,156.0],[181.0,134.0],[176.0,134.0],[173.0,174.0],[169.0,176.0],[159.0,171.0],[160.0,157.0],[161.0,167.0],[169.0,142.0],[163.0,123.0],[170.0,143.0],[160.0,169.0],[148.0,171.0],[144.0,168.0],[143.0,171.0],[136.0,159.0],[120.0,160.0],[124.0,160.0],[122.0,164.0],[118.0,162.0],[113.0,170.0],[110.0,168.0],[109.0,182.0],[115.0,208.0],[121.0,204.0],[109.0,205.0],[110.0,208.0],[102.0,210.0],[90.0,200.0],[102.0,210.0],[96.0,212.0],[113.0,209.0],[110.0,208.0],[114.0,204.0],[110.0,197.0],[113.0,184.0],[109.0,182.0],[115.0,178.0],[119.0,190.0],[115.0,178.0],[109.0,179.0],[114.0,175.0],[110.0,175.0],[116.0,166.0],[113.0,163.0],[121.0,162.0],[124.0,166.0],[122.0,182.0],[127.0,190.0],[121.0,187.0],[116.0,175.0],[118.0,171.0],[120.0,185.0],[127.0,190.0],[122.0,182.0],[125.0,176.0],[122.0,164.0],[127.0,156.0],[125.0,150.0],[120.0,149.0],[122.0,156.0],[118.0,159.0],[122.0,153.0],[117.0,150.0],[113.0,153.0],[115.0,156.0],[114.0,152.0],[123.0,149.0],[127.0,158.0],[138.0,160.0],[138.0,165.0],[129.0,160.0],[125.0,163.0],[140.0,166.0],[147.0,179.0],[139.0,196.0],[147.0,203.0],[138.0,197.0],[126.0,205.0],[135.0,199.0],[140.0,204.0],[133.0,203.0],[141.0,194.0],[136.0,185.0],[133.0,187.0],[138.0,175.0],[135.0,168.0],[138.0,175.0],[134.0,184.0],[137.0,190.0],[144.0,192.0],[143.0,195.0],[143.0,188.0],[147.0,191.0],[144.0,168.0],[168.0,185.0],[184.0,183.0],[168.0,185.0],[144.0,164.0],[169.0,177.0],[184.0,178.0],[171.0,176.0],[174.0,172.0],[172.0,138.0],[174.0,160.0],[176.0,134.0],[181.0,134.0],[179.0,127.0],[185.0,140.0],[185.0,119.0],[180.0,116.0],[199.0,129.0],[204.0,147.0],[202.0,157.0],[196.0,163.0],[205.0,146.0],[200.0,144.0],[203.0,139.0],[201.0,141.0],[196.0,125.0],[186.0,119.0],[183.0,121.0],[190.0,137.0],[195.0,138.0],[193.0,143.0],[196.0,142.0],[191.0,161.0],[196.0,142.0],[186.0,129.0],[181.0,128.0],[172.0,112.0],[168.0,112.0],[166.0,117.0],[161.0,115.0],[146.0,130.0],[142.0,129.0],[145.0,138.0],[138.0,138.0],[145.0,138.0],[149.0,143.0],[130.0,147.0],[129.0,143.0],[134.0,140.0],[121.0,146.0],[127.0,146.0],[127.0,142.0],[130.0,147.0],[149.0,143.0],[158.0,147.0],[161.0,153.0],[156.0,150.0],[158.0,147.0],[150.0,147.0],[149.0,140.0],[152.0,139.0],[145.0,139.0],[145.0,133.0],[155.0,136.0],[159.0,144.0],[150.0,133.0],[132.0,132.0],[136.0,128.0],[124.0,101.0],[128.0,97.0],[122.0,94.0],[114.0,101.0],[116.0,96.0],[112.0,98.0],[111.0,82.0],[111.0,85.0],[101.0,82.0],[103.0,76.0],[115.0,73.0],[119.0,76.0],[124.0,69.0],[119.0,76.0],[115.0,73.0],[121.0,67.0],[114.0,75.0],[101.0,77.0],[96.0,63.0],[84.0,68.0],[91.0,67.0],[94.0,72.0],[88.0,66.0],[99.0,63.0],[100.0,73.0],[95.0,77.0],[79.0,77.0],[84.0,73.0],[67.0,72.0],[59.0,75.0],[57.0,80.0],[53.0,76.0],[56.0,73.0],[50.0,73.0],[58.0,68.0],[54.0,65.0],[57.0,68.0],[52.0,71.0],[47.0,63.0],[52.0,63.0],[55.0,55.0],[59.0,56.0],[54.0,61.0],[69.0,60.0],[59.0,64.0],[73.0,62.0],[66.0,58.0],[80.0,39.0],[104.0,38.0],[136.0,44.0],]]

    drawIns = draw(coor, inputFig, 300.0, h_offset=0.212)
    drawIns.draw()
    # print('ARframe1 is ',coor.coord1)
    # print('ARframe2 is ',coor.coord2)
    # print('origin is ', coor.origin)
if __name__ == '__main__':
    test()
